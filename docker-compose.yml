services:
  housie:
    container_name: housie_server
    build:
      context: .
    ports:
      - "${HOUSIE_API_PORT}:3000"
    environment:
      - NODE_ENV=production
      - API_URL=${HOUSIE_API_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TURSO_DATABASE_URL=${TURSO_DATABASE_URL}
      - TURSO_AUTH_TOKEN=${TURSO_AUTH_TOKEN}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - RABBITMQ_URL=${RABBITMQ_URL}
    depends_on:
      - redis
      - rabbit-mq

  rabbit-mq:
    image: rabbitmq:${RABBITMQ_VERSION}-management
    container_name: housie_queue
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_UI_PORT}:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:${REDIS_VERSION}
    container_name: housie_kv
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data

  scraping-worker:
    build:
      dockerfile: ./src/workers/Dockerfile
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL}
      - TURSO_DATABASE_URL=${TURSO_DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - rabbit-mq
      - redis
    deploy:
      replicas: 3

volumes:
  rabbitmq_data:
  rabbitmq_logs:
  redis_data:
